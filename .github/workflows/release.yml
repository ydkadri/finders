name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 2.0.3)'
        required: true
        type: string
      dry-run:
        description: 'Perform a dry run without publishing'
        required: false
        type: boolean
        default: false

jobs:
  validate:
    name: Validate Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Validate version format
        run: |
          if ! [[ "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format. Expected x.y.z (e.g., 2.0.3)"
            exit 1
          fi

      - name: Check if version already exists
        run: |
          if git rev-parse "v${{ inputs.version }}" >/dev/null 2>&1; then
            echo "Tag v${{ inputs.version }} already exists!"
            exit 1
          fi

      - name: Run all checks
        run: |
          cargo check --all-features
          cargo test --all-features
          cargo fmt --all -- --check
          cargo clippy --all-features -- -D warnings

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: validate
    if: ${{ !inputs.dry-run }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Update Cargo.toml version
        run: |
          sed -i 's/^version = .*/version = "${{ inputs.version }}"/' Cargo.toml
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Cargo.toml
          git commit -m "Bump version to ${{ inputs.version }}"

      - name: Update Cargo.lock
        run: cargo update -p finders

      - name: Commit lockfile
        run: |
          git add Cargo.lock
          git commit -m "Update Cargo.lock for version ${{ inputs.version }}"

      - name: Create and push tag
        run: |
          git tag -a "v${{ inputs.version }}" -m "Release v${{ inputs.version }}"
          git push origin main
          git push origin "v${{ inputs.version }}"

      - name: Build release binary
        run: cargo build --release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ inputs.version }}
          name: Release v${{ inputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            target/release/finder
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CARGO_TOKEN }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}

  dry-run:
    name: Dry Run Release
    runs-on: ubuntu-latest
    needs: validate
    if: ${{ inputs.dry-run }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Dry run publish
        run: cargo publish --dry-run

      - name: Summary
        run: |
          echo "âœ… Dry run successful!"
          echo "Version ${{ inputs.version }} would be published."
          echo "To actually release, run this workflow again with dry-run unchecked."
